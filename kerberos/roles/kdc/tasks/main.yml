---
  - name: install kdc
    yum: name={{ item }} state=present
    with_items:
      - krb5-server
      - krb5-libs

  - name: copy kdc.conf
    template: src=kdc.conf.j2 dest=/var/kerberos/krb5kdc/kdc.conf mode=0600 owner=root group=root

  - name: copy kadm5.acl
    template: src=kadm5.acl.j2 dest=/var/kerberos/krb5kdc/kadm5.acl mode=0600 owner=root group=root

  - name: Check if kdc already configured
    stat: path=/var/kerberos/krb5kdc/principal
    register: kdc_config

  - name: initialise kdc
    shell: /usr/sbin/kdb5_util create -s -P {{ password }}
    when: kdc_config.stat.exists == false

  - name: create admin user
    shell: /usr/sbin/kadmin.local -q "addprinc -pw {{ password }} {{ admin_user }}/admin"

  - name: start services
    service: name={{ item }} state=started enabled=yes
    with_items: 
      - krb5kdc
      - kadmin

  - name: copy keytab file
    copy: src={{ keytab_file }} dest=/var/kerberos/krb5kdc/host-principal.csv

# Don't do it for headless keytab ( otherwise each node will have a different kvno in each keytab )
  - name: read servername from file
    shell: /bin/awk -F"," '!/headless/ {print $1}' /var/kerberos/krb5kdc/host-principal.csv 
    register: servername
    when: ambari_version == 1

  - name: read principal from file
    shell: /bin/awk -F"," '!/headless/  {print $3}' /var/kerberos/krb5kdc/host-principal.csv
    register: principal
    when: ambari_version == 1

  - name: read keytab from file
    shell: /bin/awk -F"," '!/headless/  {print $4}' /var/kerberos/krb5kdc/host-principal.csv
    register: keytab
    when: ambari_version == 1

  - name: read user from file
    shell: /bin/awk -F"," '!/headless/  {print $6}' /var/kerberos/krb5kdc/host-principal.csv
    register: user
    when: ambari_version == 1

  - name: read group from file
    shell: /bin/awk -F"," '!/headless/  {print $7}' /var/kerberos/krb5kdc/host-principal.csv
    register: group
    when: ambari_version == 1

  - name: read permission from file
    shell: /bin/awk -F"," '!/headless/  {print $8}' /var/kerberos/krb5kdc/host-principal.csv
    register: mode
    when: ambari_version == 1

# Don't do it for headless keytab ( otherwise each node will have a different kvno in each keytab )
  - name: read servername from file
    shell: /bin/awk -F"," '/SERVICE/ {print $1}' /var/kerberos/krb5kdc/host-principal.csv 
    register: servername
    when: ambari_version == 2

  - name: read principal from file
    shell: /bin/awk -F"," '/SERVICE/  {print $3}' /var/kerberos/krb5kdc/host-principal.csv
    register: principal
    when: ambari_version == 2

  - name: read keytab from file
    shell: /bin/awk -F"," '/SERVICE/  {print $6}' /var/kerberos/krb5kdc/host-principal.csv | awk -F"\/" '{print $NF}'
    register: keytab
    when: ambari_version == 2

  - name: read user from file
    shell: /bin/awk -F"," '/SERVICE/  {print $7}' /var/kerberos/krb5kdc/host-principal.csv
    register: user
    when: ambari_version == 2

  - name: read group from file
    shell: /bin/awk -F"," '/SERVICE/  {print $9}' /var/kerberos/krb5kdc/host-principal.csv
    register: group
    when: ambari_version == 2

  - name: read permission from file
    shell: /bin/awk -F"," '/SERVICE/  {print $11}' /var/kerberos/krb5kdc/host-principal.csv
    register: mode
    when: ambari_version == 2

  - name: create folder
    file: path=/tmp/krb/{{ item.0 }} state=directory
    with_together:
      - "{{ servername.stdout_lines }}"

  - name: check if keytab already created
    stat: path=/tmp/krb/{{ item.0 }}/{{ item.1 }}
    register:  keytab_check
    with_together:
      - "{{ servername.stdout_lines }}"
      - "{{ keytab.stdout_lines }}"

  - debug: var=keytab_check

  - name: create principal
    shell: /usr/sbin/kadmin.local -q "addprinc -randkey {{ item.0 }}"
    when: item.1.stat.exists == false
    with_together:
      - "{{ principal.stdout_lines }}"
      - "{{ keytab_check.results }}"

  - name: save principal in keytab
    shell: /usr/sbin/kadmin.local -q "xst -k /tmp/krb/{{ item.0 }}/{{ item.2 }} {{ item.1 }}"
    when: item.3.stat.exists == false
    with_together:
      - "{{ servername.stdout_lines }}"
      - "{{ principal.stdout_lines }}"
      - "{{ keytab.stdout_lines }}"
      - "{{ keytab_check.results }}"

  - name: set correct owner / permission to keytabs
    file: path=/tmp/krb/{{ item.0 }}/{{ item.1 }} owner={{ item.2 }} group={{ item.3 }} mode={{ item.4 }}
    when: item.5.stat.exists == false
    with_together:
      - "{{ servername.stdout_lines }}"
      - "{{ keytab.stdout_lines }}"
      - "{{ user.stdout_lines }}"
      - "{{ group.stdout_lines }}"
      - "{{ mode.stdout_lines }}"
      - "{{ keytab_check.results }}"

# Do it for headless keytab - ambari 1
  - name: read principal from file headless
    shell: /bin/awk -F"," '/headless/ {print $3,$4,$6,$7,$8} /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $1}' 
    register: principal_headless
    when: ambari_version == 1

  - name: read keytab from file headless
    shell: /bin/awk -F"," '/headless/ {print $4}' /var/kerberos/krb5kdc/host-principal.csv | sort -u
    register: keytab_headless
    when: ambari_version == 1

  - name: read user from file headless
    shell: /bin/awk -F"," '/headless/ {print $6}' /var/kerberos/krb5kdc/host-principal.csv | sort -u
    register: user_headless
    when: ambari_version == 1

  - name: read group from file headless
    shell: /bin/awk -F"," '/headless/ {print $7}' /var/kerberos/krb5kdc/host-principal.csv | sort -u
    register: group_headless
    when: ambari_version == 1

  - name: read permission from file headless
    shell: /bin/awk -F"," '/headless/ {print $8}' /var/kerberos/krb5kdc/host-principal.csv | sort -u
    register: mode_headless
    when: ambari_version == 1

# Do it for headless keytab - ambari 2
  - name: read principal from file headless
    shell: /bin/awk -F "," '/USER/ {print $3,$6,$7,$9,$11}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $1}'
    register: principal_headless
    when: ambari_version == 2

  - name: read keytab from file headless
    shell: /bin/awk -F "," '/USER/ {print $3,$6,$7,$9,$11}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $2}' | awk -F"\/" '{print $NF}'
    register: keytab_headless
    when: ambari_version == 2

  - name: read user from file headless
    shell: /bin/awk -F "," '/USER/ {print $3,$6,$7,$9,$11}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $3}' 
    register: user_headless
    when: ambari_version == 2

  - name: read group from file headless
    shell: /bin/awk -F "," '/USER/ {print $3,$6,$7,$9,$11}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $4}'
    register: group_headless
    when: ambari_version == 2

  - name: read permission from file headless
    shell: /bin/awk -F "," '/USER/ {print $3,$6,$7,$9,$11}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $5}'
    register: mode_headless
    when: ambari_version == 2

  - name: create headless folder
    file: path=/tmp/krb/headless state=directory

  - name: check if headless keytab already created
    stat: path=/tmp/krb/headless/{{ item.0 }}
    register:  keytab_headless_check
    with_together:
      - "{{ keytab_headless.stdout_lines }}"

  - name: create principal 
    shell: /usr/sbin/kadmin.local -q "addprinc -randkey {{ item.0 }}"
    when: item.1.stat.exists == false
    with_together:
      - "{{ principal_headless.stdout_lines }}"
      - "{{ keytab_headless_check.results }}"

  - name: save principal in keytab 
    shell: /usr/sbin/kadmin.local -q "xst -k /tmp/krb/headless/{{ item.1 }} {{ item.0 }}"
    when: item.2.stat.exists == false
    with_together:
      - "{{ principal_headless.stdout_lines }}"
      - "{{ keytab_headless.stdout_lines }}"
      - "{{ keytab_headless_check.results }}"

#  - debug: var=keytab_headless_check
#  - debug: var=principal_headless
#  - debug: var=owner
#  - debug: var=group

  - name: set correct owner / permission to keytabs
    file: path=/tmp/krb/headless/{{ item.0 }} owner={{ item.1 }} group={{ item.2 }} mode={{ item.3 }}
    when: item.4.stat.exists == false
    with_together:
      - "{{ keytab_headless.stdout_lines }}"
      - "{{ user_headless.stdout_lines }}"
      - "{{ group_headless.stdout_lines }}"
      - "{{ mode_headless.stdout_lines }}"
      - "{{ keytab_headless_check.results }}"

  - name: generate tar file from keytab
    shell: tar zcvf /tmp/krb/{{ item.0 }}.tar /tmp/krb/{{ item.0 }}/* /tmp/krb/headless/*
    with_together:
      - "{{ servername.stdout_lines }}"

  - name: fetch file
    fetch: src=/tmp/krb/{{ item.0 }}.tar dest=roles/keytabs/files/ flat=yes
    with_together:
      - "{{ servername.stdout_lines }}"

