---
# Ambari 1 
  - name: read servername from file - ambari 1 
    shell: /bin/awk -F"," '!/headless/ {print $1}' /var/kerberos/krb5kdc/host-principal.csv 
    register: servername

  - name: read principal from file - ambari 1 
    shell: /bin/awk -F"," '!/headless/  {print $3}' /var/kerberos/krb5kdc/host-principal.csv
    register: principal

  - name: read keytab from file - ambari 1 
    shell: /bin/awk -F"," '!/headless/  {print $4}' /var/kerberos/krb5kdc/host-principal.csv
    register: keytab

  - name: read user from file - ambari 1 
    shell: /bin/awk -F"," '!/headless/  {print $6}' /var/kerberos/krb5kdc/host-principal.csv
    register: user

  - name: read group from file - ambari 1 
    shell: /bin/awk -F"," '!/headless/  {print $7}' /var/kerberos/krb5kdc/host-principal.csv
    register: group

  - name: read permission from file - ambari 1 
    shell: /bin/awk -F"," '!/headless/  {print $8}' /var/kerberos/krb5kdc/host-principal.csv
    register: mode

  - name: create folder
    file: path=/tmp/krb/{{ item.0 }} state=directory
    with_together:
      - "{{ servername.stdout_lines }}"

  - name: check if keytab already created
    stat: path=/tmp/krb/{{ item.0 }}/{{ item.1 }}
    register:  keytab_check
    with_together:
      - "{{ servername.stdout_lines }}"
      - "{{ keytab.stdout_lines }}"

  - name: create principal
    shell: /usr/sbin/kadmin.local -q "addprinc -randkey {{ item.0 }}"
    when: item.1.stat.exists == false
    with_together:
      - "{{ principal.stdout_lines }}"
      - "{{ keytab_check.results }}"

  - name: save principal in keytab
    shell: /usr/sbin/kadmin.local -q "xst -k /tmp/krb/{{ item.0 }}/{{ item.2 }} {{ item.1 }}"
    when: item.3.stat.exists == false
    with_together:
      - "{{ servername.stdout_lines }}"
      - "{{ principal.stdout_lines }}"
      - "{{ keytab.stdout_lines }}"
      - "{{ keytab_check.results }}"

  - name: set correct owner / permission to keytabs
    file: path=/tmp/krb/{{ item.0 }}/{{ item.1 }} owner={{ item.2 }} group={{ item.3 }} mode={{ item.4 }}
    when: item.5.stat.exists == false
    with_together:
      - "{{ servername.stdout_lines }}"
      - "{{ keytab.stdout_lines }}"
      - "{{ user.stdout_lines }}"
      - "{{ group.stdout_lines }}"
      - "{{ mode.stdout_lines }}"
      - "{{ keytab_check.results }}"
#Â Do it for headless keytab - ambari 1
  - name: read principal from file headless - ambari 1 
    shell: /bin/awk -F "," '/headless/ {print $3,$4,$6,$7,$8}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $1}'
    register: principal_headless

  - name: read keytab from file headless - ambari 1 
    shell: /bin/awk -F "," '/headless/ {print $3,$4,$6,$7,$8}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $2}'
    register: keytab_headless

  - name: read user from file headless - ambari 1 
    shell: /bin/awk -F "," '/headless/ {print $3,$4,$6,$7,$8}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $3}' 
    register: user_headless

  - name: read group from file headless - ambari 1 
    shell: /bin/awk -F "," '/headless/ {print $3,$4,$6,$7,$8}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $4}'
    register: group_headless

  - name: read permission from file headless - ambari 1 
    shell: /bin/awk -F "," '/headless/ {print $3,$4,$6,$7,$8}' /var/kerberos/krb5kdc/host-principal.csv | sort -u | /bin/awk '{print $5}'
    register: mode_headless

  - name: create headless folder
    file: path=/tmp/krb/headless state=directory

  - name: check if headless keytab already created
    stat: path=/tmp/krb/headless/{{ item.0 }}
    register:  keytab_headless_check
    with_together:
      - "{{ keytab_headless.stdout_lines }}"

  - name: create principal
    shell: /usr/sbin/kadmin.local -q "addprinc -randkey {{ item.0 }}"
    when: item.1.stat.exists == false
    with_together:
      - "{{ principal_headless.stdout_lines }}"
      - "{{ keytab_headless_check.results }}"

  - name: save principal in keytab
    shell: /usr/sbin/kadmin.local -q "xst -k /tmp/krb/headless/{{ item.1 }} {{ item.0 }}"
    when: item.2.stat.exists == false
    with_together:
      - "{{ principal_headless.stdout_lines }}"
      - "{{ keytab_headless.stdout_lines }}"
      - "{{ keytab_headless_check.results }}"

  - name: set correct owner / permission to keytabs
    file: path=/tmp/krb/headless/{{ item.0 }} owner={{ item.1 }} group={{ item.2 }} mode={{ item.3 }}
    when: item.4.stat.exists == false
    with_together:
      - "{{ keytab_headless.stdout_lines }}"
      - "{{ user_headless.stdout_lines }}"
      - "{{ group_headless.stdout_lines }}"
      - "{{ mode_headless.stdout_lines }}"
      - "{{ keytab_headless_check.results }}"

  - name: generate tar file from keytab
    shell: tar zcvf /tmp/krb/{{ item.0 }}.tar /tmp/krb/{{ item.0 }}/* /tmp/krb/headless/*
    with_together:
      - "{{ servername.stdout_lines }}"

  - name: fetch file
    fetch: src=/tmp/krb/{{ item.0 }}.tar dest=roles/keytabs/files/ flat=yes
    with_together:
      - "{{ servername.stdout_lines }}"
